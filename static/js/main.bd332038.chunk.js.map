{"version":3,"sources":["components/UserForm.js","components/TodoForm.js","components/OpenModal.js","redux/actions.js","components/UserList.js","components/UserTab.js","components/TodoList.js","components/TodoTab.js","App.js","serviceWorker.js","redux/states.js","redux/reducers.js","redux/store.js","index.js"],"names":["UserForm","Item","name","label","rules","required","message","placeholder","type","Todoform","handleChange","onChange","OpenModal","isDisplay","visible","onCreate","onCancel","useState","setDate","loading","setloading","handleSubmit","form","validateFields","then","values","setTimeout","resetFields","catch","info","console","log","Form","useForm","title","okText","cancelText","onOk","footer","key","onClick","layout","initialValues","modifier","validateMessages","types","email","value","format","updateTodo","todo","payload","updateUser","user","EditableCell","editing","dataIndex","inputType","children","record","index","restProps","inputNode","style","margin","UserList","userDetails","useSelector","state","dispatch","useDispatch","setData","editingKey","setEditingKey","isEditing","id","cancel","save","a","row","newData","findIndex","item","splice","push","mergedColumns","width","editable","render","_","href","marginRight","onConfirm","disabled","setFieldsValue","edit","map","col","onCell","component","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","UserTab","setVisible","marginBottom","uuid","handleDatePicker","Group","compact","Todolist","todoDetails","editabledate","setEditabledate","newdate","action","date","Todotab","Action","TabPane","Tabs","App","className","textAlign","defaultActiveKey","border","padding","tab","Boolean","window","location","hostname","match","todos","rootReducer","combineReducers","newTodos","filter","i","length","newUsers","store","createStore","composeWithDevTools","applyMiddleware","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"0TAmCeA,MAhCd,WAGG,OACI,oCACI,kBAAC,IAAKC,KAAN,CACIC,KAAK,QACLC,MAAM,OACNC,MAAO,CACP,CACAC,UAAU,EACVC,QAAS,2CAIR,kBAAC,IAAD,CAAQC,YAAY,4BAErB,kBAAC,IAAKN,KAAN,CACAC,KAAK,QACLC,MAAM,QACNC,MAAO,CACP,CACAI,KAAM,WAIN,kBAAC,IAAD,CAAQD,YAAY,kC,SCDrBE,MAzBd,YAAmC,IAAhBC,EAAe,EAAfA,aAGhB,OACI,oCACI,kBAAC,IAAKT,KAAN,CACIC,KAAK,SACLC,MAAM,SACNC,MAAO,CACP,CACAC,UAAU,EACVC,QAAS,2CAIb,kBAAC,IAAD,CAAOC,YAAY,YAEnB,kBAAC,IAAKN,KAAN,CAAWE,MAAM,aAAaD,KAAK,eAEnC,kBAAC,IAAD,CAAYS,SAAUD,EAAcH,YAAY,mBC+D7CK,MA/Ed,YAA+D,IAA1CC,EAAyC,EAAzCA,UAAUC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAAY,EACrCC,mBAAS,MAD4B,mBAChDC,GADgD,aAG/BD,oBAAS,GAHsB,mBAGtDE,EAHsD,KAG7CC,EAH6C,KAgBvDC,EAAe,WACnBC,EACGC,iBACAC,MAAK,SAACC,GACLL,GAAW,GAEXM,YAAW,WACTJ,EAAKK,cACLZ,EAASU,GAETL,GAAW,KACV,QAGJQ,OAAM,SAACC,GACNC,QAAQC,IAAI,mBAAoBF,OA/BuB,EAmC9CG,IAAKC,UAAbX,EAnCsD,oBAoC7D,OACE,kBAAC,IAAD,CACER,QAASA,EACToB,MAAM,4BACNC,OAAO,SACPC,WAAW,SACXpB,SAAUA,EACVqB,KAAMhB,EACNiB,OAAQ,CACN,kBAAC,IAAD,CAAQC,IAAI,OAASC,QAASxB,GAA9B,UAGA,kBAAC,IAAD,CAAQuB,IAAI,SAAS/B,KAAK,UAAUW,QAASA,EAASqB,QAASnB,GAA/D,YAKF,kBAAC,IAAD,CACEC,KAAMA,EACNmB,OAAO,WACPvC,KAAK,gBACLwC,cAAe,CACbC,SAAU,UAEZC,iBAxDmB,CAEvBC,MAAO,CACLC,MAAO,qCAwDTjC,EACI,oCACA,kBAAC,EAAD,CAAUH,aAvDK,SAAAqC,GACDA,EAAMC,OAAO,cAE7B9B,EAAQ6B,OAuDN,oCACI,kBAAC,EAAD,U,uFCtDL,SAASE,EAAWC,GAEvB,MAAO,CACH1C,KAtBkB,cAuBlB2C,QAAQD,GA2BT,SAASE,EAAWC,GAEvB,MAAO,CACH7C,KAtBkB,cAuBlB2C,QAAQE,GClDhB,IAAMC,EAAe,SAAC,GASf,IARLC,EAQI,EARJA,QACAC,EAOI,EAPJA,UACAtB,EAMI,EANJA,MACAuB,EAKI,EALJA,UAGAC,GAEI,EAJJC,OAII,EAHJC,MAGI,EAFJF,UACGG,EACC,uFACEC,EAA0B,WAAdL,EAAyB,kBAAC,IAAD,MAAkB,kBAAC,IAAD,MAC7D,OACE,uBAAQI,EACLN,EACC,kBAAC,IAAKtD,KAAN,CACEC,KAAMsD,EACNO,MAAO,CACLC,OAAQ,GAEV5D,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,gBAAD,OAAkB4B,EAAlB,QAIV4B,GAGHJ,IA8KOO,EAxKE,WAAO,IAAD,EACNjC,IAAKC,UAAbX,EADc,oBAEf4C,EAAYC,aAAY,SAAAC,GAAK,OAAEA,EAAMf,QAEtCgB,EAASC,cAJO,EAQGrD,mBAASiD,GARZ,mBAQRK,GARQ,aAWetD,mBAAS,IAXxB,mBAWduD,EAXc,KAWFC,EAXE,KAafC,EAAY,SAACf,GAAD,OAAYA,EAAOgB,KAAOH,GAiBtCI,EAAS,WACbH,EAAc,KAGVI,EAAI,uCAAG,WAAOF,GAAP,qBAAAG,EAAA,+EAESxD,EAAKC,iBAFd,OAEHwD,EAFG,OAGHC,EAHG,YAGWd,GAEpBG,EAASjB,EAAW,CAEZuB,GAAGA,EACHzE,KAAK6E,EAAI7E,KACT4C,MAAMiC,EAAIjC,UAMZc,EAAQoB,EAAQC,WAAU,SAACC,GAAD,OAAUP,IAAOO,EAAKP,QAIzC,GACLO,EAAOF,EAAQpB,GAGrBoB,EAAQG,OAAOvB,EAAO,EAAtB,2BAA8BsB,GAASH,IAIvCR,EAAQS,GACRP,EAAc,MAEdO,EAAQI,KAAKL,GACbR,EAAQS,GACRP,EAAc,KAhCP,kDAmCT3C,QAAQC,IAAI,mBAAZ,MAnCS,0DAAH,sDAkGJsD,EA3DU,CACd,CACEnD,MAAO,OACPsB,UAAW,OACX8B,MAAO,MACPC,UAAU,GAEZ,CACErD,MAAO,QACPsB,UAAW,QACX8B,MAAO,MACPC,UAAU,GAEZ,CACErD,MAAO,SACPsB,UAAW,YACXgC,OAAQ,SAACC,EAAG9B,GAEV,IAAM4B,EAAWb,EAAUf,GAG3B,OACE,8BAEA4B,EACE,8BACE,uBACEG,KAAK,eACLlD,QAAS,kBAAMqC,EAAKlB,EAAOgB,KAC3BZ,MAAO,CACL4B,YAAa,IAJjB,QASA,kBAAC,IAAD,CAAYzD,MAAM,kBAAkB0D,UAAWhB,GAC7C,uCAIJ,uBAAGiB,SAAyB,KAAfrB,EAAmBhC,QAAS,kBAlGtC,SAACmB,GAEZrC,EAAKwE,eAAL,aACE5F,KAAM,GACN4C,MAAO,IACJa,IAGLc,EAAcd,EAAOgB,IAGrBN,EAASjB,EAAU,WAAV,cAAcc,GAAd,QAA0B,CAACP,cAuFmBoC,CAAKpC,KAApD,QAKA,kBAAC,IAAD,CAASnD,KAAK,aACX,kBAAC,IAAD,CAAY0B,MAAM,kBAAoB0D,UAAW,kBAAIvB,EDlHzD,CACH7D,KAfmB,cAgBnB2C,QCgHgFQ,EAAOgB,OAChF,uBAAIkB,SAAyB,KAAfrB,EAAoBkB,KAAK,gBAAvC,eAYiBM,KAAI,SAACC,GACjC,OAAKA,EAAIV,SAIF,2BACFU,GADL,IAEEC,OAAQ,SAACvC,GAAD,MAAa,CACnBA,SACAF,UAA6B,SAAlBwC,EAAIzC,UAAuB,OAAS,GAC/CA,UAAWyC,EAAIzC,UACftB,MAAO+D,EAAI/D,MACXqB,QAASmB,EAAUf,OAVdsC,KAcX,OACE,kBAAC,IAAD,CAAM3E,KAAMA,EAAM6E,WAAW,GAC3B,kBAAC,IAAD,CACEC,WAAY,CACVC,KAAM,CACJC,KAAMhD,IAGViD,UAAQ,EACRC,WAAYtC,EACZuC,QAASpB,EACTqB,aAAa,eACbC,WAAY,CACVhG,SAAUiE,OCpJLgC,MA5Cf,WAAoB,IAAD,EAEe3F,oBAAS,GAFxB,mBAERH,EAFQ,KAEC+F,EAFD,KAGTxC,EAASC,cAkBf,OACI,oCACM,kBAAC,IAAD,CAAQP,MAAO,CAAC+C,aAAa,QAC3BtE,QAAS,WACPqE,GAAW,KAFf,eAOA,kBAAC,EAAD,CACAhG,WA3BK,EA4BHC,QAASA,EACTC,SA3BK,SAACU,GACpBK,QAAQC,IAAI,uBAAuBN,GAC/B4C,EFmBK,CACH7D,KAPgB,WAQhB2C,QEpBF,CACIwB,GAAGoC,MACH7G,KAAKuB,EAAOS,MACZY,MAAMrB,EAAOqB,SAKjB+D,GAAW,IAiBD7F,SAAU,WACR6F,GAAW,MAIf,kBAAC,EAAD,Q,SCzCRvD,EAAe,SAAC,GAUf,IATLC,EASI,EATJA,QACAC,EAQI,EARJA,UACAtB,EAOI,EAPJA,MACAuB,EAMI,EANJA,UAGAC,GAGI,EALJC,OAKI,EAJJC,MAII,EAHJF,UACAsD,EAEI,EAFJA,iBACGnD,EACC,0GACEC,EAA0B,WAAdL,EAClB,kBAAC,IAAMwD,MAAP,CAAaC,SAAO,GAEpB,kBAAC,IAAD,CAAYnD,MAAO,CAAEuB,MAAO,OAAU3E,SAAUqG,KAClC,kBAAC,IAAD,MAEd,OACE,uBAAQnD,EACLN,EACC,kBAAC,IAAKtD,KAAN,CACEC,KAAMsD,EACNO,MAAO,CACLC,OAAQ,GAEV5D,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,gBAAD,OAAkB4B,EAAlB,QAIV4B,GAGHJ,IAwLOyD,EAlLE,WAAO,IAAD,EACNnF,IAAKC,UAAbX,EADc,oBAEf8F,EAAYjD,aAAY,SAAAC,GAAK,OAAEA,EAAMlB,QAFtB,EAGmBjC,mBAAS,MAH5B,mBAGdoG,EAHc,KAGAC,EAHA,KAKhBjD,EAASC,cAEV0C,EAAmB,SAACjE,GACxBjB,QAAQC,IAAI,mBAAmBgB,GAC/B,IAAMwE,EAASxE,EAAMC,OAAO,cAC5BlB,QAAQC,IAAI,mBAAmBwF,GAE/BD,EAAgBC,IAZK,EAkBetG,mBAAS,IAlBxB,mBAkBduD,EAlBc,KAkBFC,EAlBE,KAoBfC,EAAY,SAACf,GAAD,OAAYA,EAAOgB,KAAOH,GAgBtCI,EAAS,WACbH,EAAc,KAGVI,EAAI,uCAAG,WAAOF,GAAP,qBAAAG,EAAA,+EAGSxD,EAAKC,iBAHd,OAGHwD,EAHG,OAIHC,EAJG,YAIWoC,GAEpB/C,EAASpB,EAAW,CAEZ0B,GAAGA,EACH6C,OAAOzC,EAAIyC,OACXC,KAAKJ,MAMPzD,EAAQoB,EAAQC,WAAU,SAACC,GAAD,OAAUP,IAAOO,EAAKP,QAIzC,GACLO,EAAOF,EAAQpB,GAGrBoB,EAAQG,OAAOvB,EAAO,EAAtB,2BAA8BsB,GAASH,IAKvCN,EAAc,MAEdO,EAAQI,KAAKL,GAEbN,EAAc,KAjCP,kDAoCT3C,QAAQC,IAAI,mBAAZ,MApCS,0DAAH,sDAmGJsD,EA3DU,CACd,CACEnD,MAAO,SACPsB,UAAW,SACX8B,MAAO,MACPC,UAAU,GAEZ,CACErD,MAAO,OACPsB,UAAW,OACX8B,MAAO,MACPC,UAAU,GAEZ,CACErD,MAAO,YACPsB,UAAW,YACXgC,OAAQ,SAACC,EAAG9B,GAEV,IAAM4B,EAAWb,EAAUf,GAG3B,OACE,8BAEA4B,EACE,8BACE,uBACEG,KAAK,eACLlD,QAAS,kBAAMqC,EAAKlB,EAAOgB,KAC3BZ,MAAO,CACL4B,YAAa,IAJjB,QASA,kBAAC,IAAD,CAAYzD,MAAM,kBAAkB0D,UAAWhB,GAC7C,uBAAIc,KAAK,gBAAT,YAIJ,uBAAGG,SAAyB,KAAfrB,EAAmBhC,QAAS,kBAlGtC,SAACmB,GACZ2D,EAAgB3D,EAAO8D,MACvBnG,EAAKwE,eAAL,aACE0B,OAAQ,GACRC,KAAM,IACH9D,IAGLc,EAAcd,EAAOgB,IAErBN,EAASpB,EAAU,WAAV,cAAcmE,GAAd,QAA0B,CAACzD,cAwFmBoC,CAAKpC,IAAU+B,KAAK,gBAAnE,QAKA,kBAAC,IAAD,CAASlF,KAAK,aACX,kBAAC,IAAD,CAAY0B,MAAM,kBAAmB0D,UAAW,kBAAIvB,EHhKxD,CACH7D,KAfmB,cAgBnB2C,QG8J+EQ,EAAOgB,OACjF,uBAAIkB,SAAyB,KAAfrB,EAAoBkB,KAAK,gBAAvC,eAYmBM,KAAI,SAACC,GACjC,OAAKA,EAAIV,SAIF,2BACFU,GADL,IAEEC,OAAQ,SAACvC,GAAD,MACJ,CACFA,SACAqD,mBACAvD,UAA6B,SAAlBwC,EAAIzC,UAAuB,SAAW,OACjDA,UAAWyC,EAAIzC,UACftB,MAAO+D,EAAI/D,MACXqB,QAASmB,EAAUf,OAZdsC,KAiBX,OACE,kBAAC,IAAD,CAAM3E,KAAMA,EAAM6E,WAAW,GAC3B,kBAAC,IAAD,CACEC,WAAY,CACVC,KAAM,CACJC,KAAMhD,IAGViD,UAAQ,EACRC,WAAYY,EACZX,QAASpB,EACTqB,aAAa,eACbC,WAAY,CACVhG,SAAUiE,OCrKL8C,MA5Cf,WAAoB,IAAD,EAEezG,oBAAS,GAFxB,mBAERH,EAFQ,KAEC+F,EAFD,KAGTxC,EAASC,cAkBf,OACI,oCACM,kBAAC,IAAD,CAAQ9D,KAAK,UAAUuD,MAAO,CAAC+C,aAAa,QAC1CtE,QAAS,WACPqE,GAAW,KAFf,eAOA,kBAAC,EAAD,CACFhG,WA3BQ,EA4BJC,QAASA,EACTC,SA3BK,SAACU,GAEhB4C,EJbK,CACH7D,KAPgB,WAQhB2C,QIYF,CACIwB,GAAGoC,MACHS,OAAO/F,EAAOkG,OACdF,KAAKhG,EAAO,eAAeuB,OAAO,iBAKtC6D,GAAW,IAiBD7F,SAAU,WACR6F,GAAW,MAGjB,kBAAC,EAAD,QCzCJe,EAAYC,IAAZD,QAqBOE,MAlBf,WAEE,OACE,yBAAK/D,MAAO,CAAEuB,MAAO,IAAKtB,OAAQ,cAAgB+D,UAAU,OAEtD,wBAAIhE,MAAO,CAACiE,UAAU,WAAtB,2BACA,kBAAC,IAAD,CAAMC,iBAAiB,OAAOlE,MAAO,CAACmE,OAAO,oBAAoBC,QAAQ,SACrE,kBAACP,EAAD,CAASQ,IAAI,OAAO7F,IAAI,QAC3B,kBAAC,EAAD,OAEG,kBAACqF,EAAD,CAASQ,IAAI,OAAO7F,IAAI,QACtB,kBAAC,EAAD,UCVI8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uCChBKC,EAAM,CACb,CACI/D,GAAIoC,MACRS,OAAO,UACPC,KAAK,cAEL,CACI9C,GAAIoC,MACRS,OAAO,UACPC,KAAK,cAEL,CACI9C,GAAIoC,MACRS,OAAO,UACPC,KAAK,eAIEvD,EAAY,CACnB,CACIS,GAAIoC,MACR7G,KAAK,QACL4C,MAAM,mBAEN,CACI6B,GAAIoC,MACR7G,KAAK,QACL4C,MAAM,mBAEN,CACI6B,GAAIoC,MACR7G,KAAK,QACL4C,MAAM,oBC6CG6F,EAAcC,0BAAgB,CACvC1F,KA7Ec,WAAyB,IACnC2F,EADWzE,EAAuB,uDAAfsE,EAAMlB,EAAS,uCAEtC,OAAQA,EAAOhH,MACX,IRNgB,WQUf,OAHEqI,EAAS,YAAIzE,GACZyE,EAAS,GAAD,mBAAKzE,GAAL,CAAWoD,EAAOrE,UAG9B,IRVmB,cQclB,OAFG0F,GADDA,EAAS,YAAIzE,IACM0E,QAAO,SAAA5F,GAAI,OAAEA,EAAKyB,KAAK6C,EAAOrE,WAIpD,IRfkB,cQgBd0F,EAAS,YAAIzE,GAEb,IADA,IAAIR,GAAO,EACHmF,EAAE,EAAIA,EAAIF,EAASG,SACvBpF,IACGiF,EAASE,GAAGpE,KAAO6C,EAAOrE,QAAQwB,IAFPoE,KAOlC,IAAc,IAAXnF,EAEC,OADAiF,EAASjF,GAAO4D,EAAOrE,QAChB0F,EAEf,QACI,OAAOzE,IAiDff,KAzCc,WAA+B,IAEzC4F,EAFW7E,EAA6B,uDAArBF,EAAYsD,EAAS,uCAG5C,OAAQA,EAAOhH,MACX,IRbgB,WQiBf,OAHGyI,EAAS,YAAI7E,GACb6E,EAAS,GAAD,mBAAK7E,GAAL,CAAWoD,EAAOrE,UAG9B,IRjBmB,cQqBlB,OAFG8F,GADAA,EAAS,YAAI7E,IACK0E,QAAO,SAAA5F,GAAI,OAAEA,EAAKyB,KAAK6C,EAAOrE,WAIpD,IRtBkB,cQuBd8F,EAAS,YAAI7E,GAGb,IADA,IAAIR,GAAO,EACHmF,EAAE,EAAIA,EAAIE,EAASD,SACvBpF,IACGqF,EAASF,GAAGpE,KAAO6C,EAAOrE,QAAQwB,IAFPoE,KAOlC,IAAc,IAAXnF,EAEC,OADAqF,EAASrF,GAAO4D,EAAOrE,QAChB8F,EAEf,QACI,OAAO7E,MClER8E,EAAMC,sBAAYR,EAAYS,8BACrCC,0BAAgBC,OCEpBC,IAAS/D,OAEH,kBAAC,IAAD,CAAU0D,MAAOA,GAClB,kBAAE,EAAF,OAIHM,SAASC,eAAe,SJoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpI,MAAK,SAAAqI,GACJA,EAAaC,gBAEdlI,OAAM,SAAAmI,GACLjI,QAAQiI,MAAMA,EAAMzJ,c","file":"static/js/main.bd332038.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Form,Input} from 'antd'\r\n\r\n function UserForm() {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                name=\"title\"\r\n                label=\"Name\"\r\n                rules={[\r\n                {\r\n                required: true,\r\n                message: 'Please input the title of collection!',\r\n                },\r\n                ]}\r\n            >\r\n                 <Input  placeholder=\"please enter your name\"/>\r\n            </Form.Item>\r\n                <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[\r\n                {\r\n                type: 'email',\r\n                },\r\n                ]}\r\n            >\r\n                <Input  placeholder=\"please enter your email id\"/>\r\n            </Form.Item>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserForm;","import React from 'react'\r\nimport { Form,Input,DatePicker} from 'antd'\r\n\r\n function Todoform({handleChange}) {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                name=\"Action\"\r\n                label=\"Action\"\r\n                rules={[\r\n                {\r\n                required: true,\r\n                message: 'Please input the title of collection!',\r\n                },\r\n                ]}\r\n            >\r\n            <Input placeholder=\"Action\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"DatePicker\" name=\"date-picker\">\r\n\r\n            <DatePicker onChange={handleChange} placeholder=\"select date\"/>\r\n            </Form.Item>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todoform;","import React, { useState } from 'react'\r\n\r\nimport { Modal, Form,Button } from 'antd';\r\nimport UserForm from './UserForm';\r\nimport Todoform from './TodoForm';\r\n\r\n function OpenModal({ isDisplay,visible, onCreate, onCancel }) {\r\n  const [date, setDate] = useState(null)\r\n\r\n  const [loading, setloading] = useState(false)\r\n  const validateMessages = {\r\n   \r\n    types: {\r\n      email: '${label} is not validate email!',\r\n    },\r\n  };\r\n  const handleChange = value => {\r\n    const datepicker= value.format('YYYY-MM-DD')\r\n   \r\n      setDate(value);\r\n    };\r\n\r\n  const handleSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        setloading(true)\r\n        // const data = await wait(5000)\r\n        setTimeout(() => {\r\n          form.resetFields();\r\n          onCreate(values);\r\n       \r\n          setloading(false)\r\n        }, 1000);\r\n     \r\n      })\r\n      .catch((info) => {\r\n        console.log('Validate Failed:', info);\r\n      });\r\n  }\r\n\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Create a new user details\"\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={handleSubmit}\r\n      footer={[\r\n        <Button key=\"back\"   onClick={onCancel}>\r\n           Cancel\r\n        </Button>,\r\n        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleSubmit} >\r\n          Submit\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        name=\"form_in_modal\"\r\n        initialValues={{\r\n          modifier: 'public',\r\n        }}\r\n        validateMessages={validateMessages}\r\n      >\r\n       \r\n   {isDisplay ? \r\n        <>\r\n        <Todoform handleChange={handleChange}/>\r\n        </>\r\n        :\r\n        <>\r\n            <UserForm/>\r\n          \r\n        </>\r\n        }\r\n   \r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OpenModal;","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const UPDATE_TODO= 'UPDATE_TODO';\r\n\r\nexport function addTodo(todo){\r\n\r\n    return {\r\n        type:ADD_TODO,\r\n        payload:todo,\r\n    }\r\n}\r\n\r\n\r\nexport function deleteTodo(todoId){\r\n  \r\n    return {\r\n        type:DELETE_TODO,\r\n        payload:todoId,\r\n    }\r\n}\r\n\r\nexport function updateTodo(todo){\r\n\r\n    return {\r\n        type:UPDATE_TODO,\r\n        payload:todo,\r\n    }\r\n}\r\n\r\n\r\n// FOR USER DATAILS\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const UPDATE_USER= 'UPDATE_USER';\r\n\r\nexport function addUser(user){\r\n  \r\n    return {\r\n        type:ADD_USER,\r\n        payload:user,\r\n    }\r\n}\r\n\r\n\r\nexport function deleteUser(userId){\r\n\r\n    return {\r\n        type:DELETE_USER,\r\n        payload:userId,\r\n    }\r\n}\r\n\r\nexport function updateUser(user){\r\n \r\n    return {\r\n        type:UPDATE_USER,\r\n        payload:user,\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Table, Input, InputNumber, Popconfirm, Form,Divider } from 'antd';\r\nimport {  deleteUser, updateUser } from '../redux/actions';\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst UserList = () => {\r\n  const [form] = Form.useForm();\r\n  const userDetails=useSelector(state=>state.user)\r\n\r\n const dispatch=useDispatch();\r\n\r\n\r\n\r\n  const [data, setData] = useState(userDetails);\r\n  \r\n\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n \r\n  const isEditing = (record) => record.id === editingKey;\r\n \r\n  const edit = (record) => {\r\n  \r\n    form.setFieldsValue({\r\n      name: '',\r\n      email: '',\r\n      ...record,\r\n    });\r\n  \r\n    setEditingKey(record.id);\r\n   \r\n   \r\n    dispatch(updateUser(...userDetails,{record}))\r\n\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (id) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...userDetails];\r\n   \r\n      dispatch(updateUser({\r\n       \r\n              id:id,\r\n              name:row.name,\r\n              email:row.email,\r\n          }));\r\n     \r\n    \r\n     \r\n      \r\n      const index = newData.findIndex((item) => id === item.id);\r\n     \r\n     \r\n    \r\n      if (index > -1) {\r\n        const item = newData[index];\r\n     \r\n     \r\n        newData.splice(index, 1, { ...item, ...row });\r\n        \r\n    \r\n     \r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      width: '40%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n      \r\n        const editable = isEditing(record);\r\n   \r\n     \r\n        return (\r\n          <span>\r\n          {\r\n          editable ? (\r\n            <span>\r\n              <a\r\n                href=\"javascript:;\"\r\n                onClick={() => save(record.id)}\r\n                style={{\r\n                  marginRight: 8,\r\n                }}\r\n              >\r\n                Save\r\n              </a>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                <a>Cancel</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              Edit\r\n            </a>\r\n          )\r\n          }\r\n            <Divider type=\"vertical\" />\r\n               <Popconfirm title=\"Sure to delete?\"   onConfirm={()=>dispatch(deleteUser(record.id))}>\r\n               <a  disabled={editingKey !== ''}  href=\"javascript:;\">Delete</a>\r\n          </Popconfirm>\r\n      \r\n          </span>\r\n        )\r\n \r\n\r\n\r\n\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'name' ? 'text' : '',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={userDetails}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'react-uuid';\r\n\r\nimport {Button} from 'antd'\r\nimport OpenModal from './OpenModal'\r\n\r\nimport UserList from './UserList'\r\nimport { addUser } from '../redux/actions';\r\n\r\nfunction UserTab() {\r\n    \r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch=useDispatch();\r\n   const isDisplay=false;\r\n  \r\n    const onCreate = (values) => {\r\n  console.log(\"added values in list\",values)\r\n      dispatch(addUser(\r\n      {\r\n          id:uuid(),\r\n          name:values.title,\r\n          email:values.email\r\n\r\n      }\r\n  )); \r\n    \r\n      setVisible(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n              <Button style={{marginBottom:'10px'}}\r\n                onClick={() => {\r\n                  setVisible(true);\r\n                }}\r\n              >\r\n               Create User\r\n              </Button>\r\n              <OpenModal \r\n              isDisplay={isDisplay}\r\n                visible={visible}\r\n                onCreate={onCreate}\r\n                onCancel={() => {\r\n                  setVisible(false);\r\n                }}\r\n              />\r\n            \r\n              <UserList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserTab;","\r\n\r\nimport React, {  useState } from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Table, Input, Popconfirm, Form,Divider,DatePicker } from 'antd';\r\nimport {  deleteTodo, updateTodo } from '../redux/actions';\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  handleDatePicker,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ?   \r\n  <Input.Group compact>\r\n \r\n  <DatePicker style={{ width: '70%' }}  onChange={handleDatePicker}/>\r\n</Input.Group>: <Input />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst Todolist = () => {\r\n  const [form] = Form.useForm();\r\n  const todoDetails=useSelector(state=>state.todo)\r\n  const [editabledate, setEditabledate] = useState(null)\r\n\r\n const dispatch=useDispatch();\r\n\r\nconst handleDatePicker = (value) =>{\r\n  console.log(\"handleDatePicker\",value);\r\n  const newdate= value.format('YYYY-MM-DD')\r\n  console.log(\"handleDatePicker\",newdate);\r\n \r\n  setEditabledate(newdate)\r\n}\r\n\r\n//   const [data, setData] = useState(todoDetails);\r\n  \r\n\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n \r\n  const isEditing = (record) => record.id === editingKey;\r\n \r\n  const edit = (record) => {\r\n    setEditabledate(record.date)\r\n    form.setFieldsValue({\r\n      action: '',\r\n      date: '',\r\n      ...record,\r\n    });\r\n  \r\n    setEditingKey(record.id);\r\n\r\n    dispatch(updateTodo(...todoDetails,{record}))\r\n\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (id) => {\r\n    try {\r\n    \r\n      const row = await form.validateFields();\r\n      const newData = [...todoDetails];\r\n   \r\n      dispatch(updateTodo({\r\n       \r\n              id:id,\r\n              action:row.action,\r\n              date:editabledate,\r\n          }));\r\n     \r\n    \r\n     \r\n      \r\n      const index = newData.findIndex((item) => id === item.id);\r\n     \r\n     \r\n    \r\n      if (index > -1) {\r\n        const item = newData[index];\r\n  \r\n     \r\n        newData.splice(index, 1, { ...item, ...row });\r\n        \r\n    \r\n     \r\n        // setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        // setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      width: '40%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'operation',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n      \r\n        const editable = isEditing(record);\r\n   \r\n     \r\n        return (\r\n          <span>\r\n          {\r\n          editable ? (\r\n            <span>\r\n              <a\r\n                href=\"javascript:;\"\r\n                onClick={() => save(record.id)}\r\n                style={{\r\n                  marginRight: 8,\r\n                }}\r\n              >\r\n                Save\r\n              </a>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                <a  href=\"javascript:;\">Cancel</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a disabled={editingKey !== ''} onClick={() => edit(record)}  href=\"javascript:;\">\r\n              Edit\r\n            </a>\r\n          )\r\n          }\r\n            <Divider type=\"vertical\" />\r\n               <Popconfirm title=\"Sure to delete?\"  onConfirm={()=>dispatch(deleteTodo(record.id))}>\r\n             <a  disabled={editingKey !== ''}  href=\"javascript:;\">Delete</a>\r\n          </Popconfirm>\r\n      \r\n          </span>\r\n        )\r\n \r\n\r\n\r\n\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    \r\n    return {\r\n      ...col,\r\n      onCell: (record) => (\r\n          {\r\n        record,\r\n        handleDatePicker,\r\n        inputType: col.dataIndex === 'date' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n       \r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={todoDetails}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}    \r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'react-uuid';\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport OpenModal from './OpenModal'\r\n\r\nimport { addTodo } from '../redux/actions';\r\nimport Todolist from './TodoList';\r\n\r\nfunction Todotab() {\r\n    \r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch=useDispatch();\r\n    const isDisplay=true;\r\n  \r\n    const onCreate = (values) => {\r\n//   const datepicker=values['date-picker'].format('YYYY-MM-DD'));\r\n      dispatch(addTodo(\r\n      {\r\n          id:uuid(),\r\n          action:values.Action,\r\n          date:values['date-picker'].format('YYYY-MM-DD'),\r\n\r\n      }\r\n  ));\r\n    \r\n      setVisible(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n              <Button type=\"primary\" style={{marginBottom:'10px'}}\r\n                onClick={() => {\r\n                  setVisible(true);\r\n                }}\r\n              >\r\n               Create Todo\r\n              </Button>\r\n              <OpenModal \r\n            isDisplay={isDisplay}\r\n                visible={visible}\r\n                onCreate={onCreate}\r\n                onCancel={() => {\r\n                  setVisible(false);\r\n                }}\r\n              />\r\n            <Todolist/>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todotab;","import React from 'react';\nimport 'antd/dist/antd.css';\n\n\nimport UserTab from './components/UserTab';\n\nimport { Tabs } from 'antd';\nimport Todotab from './components/TodoTab';\nconst { TabPane } = Tabs;\n\n\nfunction App() {\n\n  return (\n    <div style={{ width: 600, margin: '100px auto' }} className=\"App\">\n         \n          <h2 style={{textAlign:\"center\"}}>Todo App By Using Redux</h2>\n          <Tabs defaultActiveKey=\"User\" style={{border:'1px solid #f1f1f1',padding:\"20px\"}} >\n              <TabPane tab=\"Todo\" key=\"Todo\" >\n           <Todotab/>\n              </TabPane>\n              <TabPane tab=\"User\" key=\"User\">\n                <UserTab/>\n            </TabPane>\n          </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import uuid from 'react-uuid'\r\n\r\nexport let todos=[\r\n    {\r\n        id: uuid(),\r\n    action:'action1',\r\n    date:'2020-10-15'\r\n    },\r\n    {\r\n        id: uuid(),\r\n    action:'action2',\r\n    date:'1990-01-01'\r\n    },\r\n    {\r\n        id: uuid(),\r\n    action:'action3',\r\n    date:'2001-09-02'\r\n    }\r\n]\r\n\r\nexport let userDetails=[\r\n    {\r\n        id: uuid(),\r\n    name:'name1',\r\n    email:'name1@gmail.com'\r\n    },\r\n    {\r\n        id: uuid(),\r\n    name:'name2',\r\n    email:'name2@gmail.com'\r\n    },\r\n    {\r\n        id: uuid(),\r\n    name:'name3',\r\n    email:'name3@gmail.com'\r\n    }\r\n]","import {combineReducers} from 'redux'\r\nimport {ADD_TODO,DELETE_TODO,UPDATE_TODO,ADD_USER,DELETE_USER,UPDATE_USER} from './actions'\r\nimport {todos,userDetails} from './states'\r\nconst todoReducer=(state = todos,action)=>{\r\n    let newTodos\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n           newTodos=[...state];\r\n            newTodos=[...state,action.payload];\r\n\r\n         return newTodos;\r\n        case DELETE_TODO:\r\n           newTodos=[...state];\r\n            newTodos=newTodos.filter(todo=>todo.id!==action.payload)\r\n\r\n         return newTodos;\r\n\r\n        case UPDATE_TODO:\r\n            newTodos=[...state];\r\n            let index=-1;\r\n            for(let i=0 ; i < newTodos.length;i++){\r\n                index++;\r\n                if(newTodos[i].id === action.payload.id){\r\n                    break;\r\n                }\r\n               \r\n            }\r\n            if(index !== -1){\r\n                newTodos[index]=action.payload;\r\n                return newTodos;\r\n            }  \r\n        default:\r\n            return state;\r\n      \r\n    }\r\n  \r\n       \r\n}\r\n\r\n//for user\r\nconst userReducer=(state = userDetails,action)=>{\r\n  \r\n    let newUsers\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            newUsers=[...state];\r\n            newUsers=[...state,action.payload];\r\n\r\n         return newUsers;\r\n        case DELETE_USER:\r\n            newUsers=[...state];\r\n            newUsers=newUsers.filter(todo=>todo.id!==action.payload)\r\n\r\n         return newUsers;\r\n\r\n        case UPDATE_USER:\r\n            newUsers=[...state];\r\n            \r\n            let index=-1;\r\n            for(let i=0 ; i < newUsers.length;i++){\r\n                index++;\r\n                if(newUsers[i].id === action.payload.id){\r\n                    break;\r\n                }\r\n               \r\n            }\r\n            if(index !== -1){\r\n                newUsers[index]=action.payload;\r\n                return newUsers;\r\n            }  \r\n        default:\r\n            return state;\r\n      \r\n    }\r\n  \r\n       \r\n}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    todo: todoReducer,\r\n    user:userReducer,\r\n   \r\n  })","import {applyMiddleware,createStore} from 'redux';\r\nimport logger from 'redux-logger' // we can logger in console \r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {rootReducer} from './reducers'\r\n\r\nexport let store=createStore(rootReducer,composeWithDevTools(\r\n    applyMiddleware(logger)\r\n  ));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store'\n\nReactDOM.render(\n \n      <Provider store={store}>\n     < App />\n      </Provider>\n \n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}